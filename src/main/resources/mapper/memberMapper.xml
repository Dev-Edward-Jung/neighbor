<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neighbor.mapper.MemberMapper">
    <!-- 회원관리 전체 조회 회원관리-->
    <select id="selectAll" resultType="MemberDTO">
        select member_id, member_identification, member_password, member_name, member_nickname, member_birth, member_phone, member_region, member_email, member_hi_sentence, member_profile_uuid, member_profile_original_name, member_profile_path, member_profile_size
        from tbl_member order by member_id desc
    </select>

    <!-- 대시보드 회원관리 목록-->
    <select id="selectAllBy" resultType="MemberDTO">
    select member_id, member_identification, member_password, member_name, member_nickname,
    member_birth, member_phone, member_region, member_email, member_hi_sentence,
    member_profile_uuid, member_profile_original_name, member_profile_path, member_profile_size
    from tbl_member
    order by member_id desc
    limit 5
    </select>

    <!--회원관리 멤버 삭제-->
    <delete id="delete">
        delete from tbl_member
        where member_id=#{memberId}
    </delete>

    <!--회원 총 수-->
    <select id="countAll" resultType="Integer">
        select count(distinct member_id) countTotalMembers
        from tbl_member
    </select>

<!--  회원정보 조회하기  -->
    <select id="selectOne" resultType="memberVO">
        select member_id, member_identification, member_password, member_name, member_nickname, member_birth, member_phone, member_region, member_email, member_hi_sentence, member_profile_uuid, member_profile_original_name, member_profile_path, member_profile_size
        from tbl_member where member_id = #{memberId}
    </select>

    <!--회원가입-->
    <insert id="insert">
        insert into tbl_member(member_identification, member_password, member_name, member_nickname, member_birth, member_phone, member_region, member_email, member_hi_sentence, member_profile_uuid, member_profile_path, member_profile_original_name, member_profile_size)
        values(#{memberIdentification}, #{memberPassword}, #{memberName}, #{memberNickname}, #{memberBirth}, #{memberPhone}, #{memberRegion}, #{memberEmail}, #{memberHiSentence}, #{memberProfileUuid}, #{memberProfilePath}, #{memberProfileOriginalName}, #{memberProfileSize})
    </insert>

    <!-- 아이디 중복검사 -->
    <select id="selectByIdentification" resultType="long">
		select count(member_id) from tbl_member where member_identification = #{memberIdentification}
	</select>

    <!-- 닉네임 중복검사 -->
    <select id="selectByNickname" resultType="long">
		select count(member_id)  from tbl_member where member_nickname = #{memberNickname}
	</select>

    <!-- 이메일 중복검사 -->
    <select id="selectByEmail" resultType="long">
		select count(member_id)  from tbl_member where member_email = #{memberEmail}
	</select>

    <!-- 휴대폰번호 중복검사 -->
    <select id="selectByPhone" resultType="long">
		select count(member_id)  from tbl_member where member_phone = #{memberPhone}
	</select>

    <!--로그인-->
    <select id="selectById" resultType="long">
		select member_id from tbl_member
		where member_identification = #{memberIdentification} and member_password = #{memberPassword}
	</select>

    <!--네이버 로그인-->
    <select id="compareEmail" resultType="long">
        select member_id from tbl_member
		where member_email = #{memberEmail}
    </select>

    <!--아이디 찾기-->
    <select id="selectMyIdentification" resultType="String">
		select member_identification from tbl_member
		where member_email = #{memberEmail}
	</select>

    <!--비밀번호 업데이트-->
    <update id="updateMyPassword">
        update tbl_member
        set member_password = #{memberPassword}
        where member_identification = #{memberIdentification}
    </update>

    <!--업데이트 랜덤키-->
    <update id="updateRandomKey">
        update tbl_member
        set member_random_key = #{memberRandomKey}
        where member_email = #{memberEmail}
    </update>

    <!--이메일로 계정정보 찾기-->
    <select id="selectInfoByEmail" resultType="memberVO">
        select member_id, member_identification, member_password, member_name, member_nickname, member_birth, member_phone, member_region, member_email, member_hi_sentence, member_profile_uuid, member_profile_original_name, member_profile_path, member_profile_size
        from tbl_member where member_email = #{memberEmail}
    </select>

    <!--아이디로 계정정보 찾기-->
    <select id="selectInfoByIdentification" resultType="memberVO">
        select member_id, member_identification, member_password, member_name, member_nickname, member_birth, member_phone, member_region, member_email, member_hi_sentence, member_profile_uuid, member_profile_original_name, member_profile_path, member_profile_size
        from tbl_member where member_identification = #{memberIdentification}
    </select>

    <!--아이디로 이메일 찾기-->
    <select id="selectEmailByIdentification" resultType="String">
        select member_email
        from tbl_member where member_identification = #{memberIdentification}
    </select>

    <!--아이디로 랜덤키 찾기-->
    <select id="selectRandomKeyByIdentification" resultType="String">
        select member_random_key
        from tbl_member where member_identification = #{memberIdentification}
    </select>
</mapper>