<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neighbor.mapper.MessageMapper">
    <!-- 내가 보낸 쪽지방 전체 -->
    <select id="selectAll" resultType="messageRoomDTO">
        select if(seller_id=#{memberId}, customer_id, seller_id) target_id, message_room_id, board_id
        from tbl_message_room where (seller_id=#{memberId} or customer_id=#{memberId})
        order by message_room_id desc
        limit #{criteria.offset}, #{criteria.amount}
    </select>

    <!-- 해당 게시글의 쪽지 내역-->
    <select id="selectMessage" resultType="messageVO">
        select message_id, board_id, message_content, message_register_date, message_room_id, message_sender_id, message_getter_id
        from tbl_message where message_room_id =#{messageRoomId}
        order by message_register_date desc
        limit #{criteria.offset}, #{criteria.amount}
    </select>

    <!-- 전체 쪽지 개수 -->
    <select id="selectCountList" resultType="integer">
        select count(message_room_id) from tbl_message_room
        where customer_id = #{memberId} or seller_id = #{memberId}
    </select>

    <!-- 쪽지 대화내용 개수 -->
    <select id="selectCountMessage" resultType="integer">
        select count(message_id) from tbl_message
        where message_room_id =#{messageRoomId}
    </select>

    <!-- 쪽지 대화내역 중 가장 최근 날짜 -->
    <select id="selectLatestDate" resultType="string">
        select date_format(max(message_register_date), '%y-%m-%d %h:%i') as latest_register_date
        from tbl_message where message_room_id = #{messageRoomId}
    </select>

    <!-- 기본 정보로 대화방 번호 가져오기-->
    <select id="selectMessageRoomId" resultType="long">
        select message_room_id from tbl_message_room where board_id = #{boardId} and customer_id = #{customerId}
    </select>

    <!--  쪽지 상대방 정보  -->
    <select id="selectTargetInfo" resultType="memberVO">
        select member_id, member_nickname, member_profile_uuid, member_profile_path, member_profile_original_name from tbl_member where member_id = #{member_id}
    </select>

    <!--  쪽지 입력  -->
    <insert id="insertMessageVO">
        insert into tbl_message
        (message_content, board_id, message_room_id, message_sender_id, message_getter_id)
        values(#{messageContent}, #{boardId}, #{messageRoomId}, #{messageSenderId}, #{messageGetterId})
    </insert>

    <!--  쪽지방 생성  -->
    <insert id="insertMessageRoomVO">
        insert into tbl_message_room (board_id, seller_id, customer_id)
        values(#{boardId}, #{sellerId}, #{customerId})
    </insert>

    <!--  작성 게시물 수  -->
    <select id="selectCountBoard" resultType="integer">
        select count(board_id) as count_board from tbl_board where member_id=#{memberId}
    </select>

    <!--  작성 후기 수  -->
    <select id="selectCountReply" resultType="integer">
        select count(reply_id) as count_reply from tbl_reply where member_id=#{memberId}
    </select>

    <!--  키워드별 작성 후기 수  -->
    <select id="selectCountReplyByKeyword" resultType="integer">
        select count(reply_id) as count_reply from tbl_reply r join tbl_board b on r.board_id =b.board_id where r.member_id=#{memberId} and board_title like concat('%',#{keyword}, '%')
    </select>

    <!--  게시물 평점  -->
    <select id="selectAvgScore" resultType="integer">
        select ifnull(avg(reply_score), 0) avg_score from tbl_reply where board_id =#{boardId}
    </select>

    <!--  게시물당 총 후기 수  -->
    <select id="selectTotalReply" resultType="integer">
        select count(reply_id) total_reply from tbl_reply where board_id =#{boardId}
    </select>

    <!-- 내가 올린 게시글  -->
    <select id="selectBoardByMemberId" resultType="BoardDTO">
        select b.board_id, board_title, board_content, board_register_date, board_update_date, board_status as file_main_status, board_region, member_id,
        board_file_original_name as file_main_name, board_file_uuid as file_main_uuid, board_file_path as file_main_path, board_file_size as file_main_size
        , board_price
        from tbl_board b left join tbl_board_file bf
        on b.board_id = bf.board_id where b.member_id =#{memberId} and board_file_status=1
		order by board_register_date desc
        limit #{criteria.offset}, #{criteria.amount}
    </select>

    <update id="updatePassword" >
        update tbl_member
		set member_password=#{memberPassword}
		where member_id=#{memberId}
    </update>

    <!-- 내가 올린 후기글  -->
    <select id="selectReplyByMemberId" resultType="replyDTO">
        select reply_id, reply_content, reply_score, reply_register_date, reply_update_date, r.member_id, r.board_id, board_title
        from tbl_reply r join tbl_board b on r.board_id =b.board_id where r.member_id=#{memberId}
        and board_title like concat('%',#{keyword}, '%')
        order by reply_register_date desc
        limit #{cri.offset}, #{cri.amount}
    </select>

    <!--  게시글 대표 사진 가져오기  -->
    <select id="selectBoardThumbnail" resultType="boardFileVO">
        select board_file_original_name, board_file_uuid, board_file_path, board_file_size
        from tbl_board_file where board_id = #{boardId} and board_file_status=1;
    </select>

    <!--  판매자 아이디 가져오기  -->
    <select id="selectSellerId" resultType="long">
        select member_id as seller_id from tbl_board where board_id= #{boardId}
    </select>

    <!-- 게시글 정보 가져오기 -->
    <select id="selectBoardByBoardId" resultType="boardVO">
        select board_id, board_title, board_content, board_register_date, board_update_date, board_status, member_id as seller_id, board_region
		from tbl_board where board_id=#{boardId}
    </select>

    <!--  게시글 판매 상태 바꾸기  -->
    <update id="updateBoardStatus">
        update tbl_board
		set board_status=1
		where board_id=#{boardId}
    </update>

    <insert id="insertPurchaseStatus">
        insert into tbl_purchase
        (board_id, customer_id)
        values(#{boardId}, #{memberId})
    </insert>

    <select id="selectPurchase" resultType="long">
        select purchase_id
        from tbl_purchase where board_id = #{boardId} and customer_id=#{memberId}
    </select>

</mapper>